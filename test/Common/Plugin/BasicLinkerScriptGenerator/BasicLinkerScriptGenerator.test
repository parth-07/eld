#---BasicLinkerScriptGenerator.test----------------------- Executable,LS --------------------#
#BEGIN_COMMENT
# This tests checks that the behavior of printing output section data commands
# along with many other linker script commands.
#END_COMMENT
#START_TEST
RUN: %clang %clangopts -o %t1.1.o %p/Inputs/1.c -c -ffunction-sections
RUN: %link %linkopts -o %t1.1.out %t1.1.o -L%libsdir/test -T %p/Inputs/script.t 2>&1 | %filecheck %s
RUN: %link %linkopts -o %t1.1.out %t1.1.o -L%libsdir/test -T %p/Inputs/script.OutputSectionPlugin.t 2>&1 | %filecheck %s --check-prefix OUTSECT_PLUGIN
#END_TEST
#CHECK: SECTIONS {
#CHECK:   .foo : {
#CHECK:     *(*foo*)
#CHECK:     BYTE (0xf)
#CHECK:   }
#CHECK:   .bar : {
#CHECK:     *(*bar*)
#CHECK:     SHORT (0x2)
#CHECK:   }
#CHECK:   .baz : {
#CHECK:     *(*baz*)
#CHECK:     LONG (0x3)
#CHECK:   }
#CHECK:   .text : {
#CHECK:     *(*text*)
#CHECK:     QUAD (0xabab)
#CHECK:     SQUAD (0xefef)
#CHECK:   }
#CHECK: }

OUTSECT_PLUGIN: SECTIONS {
OUTSECT_PLUGIN:   .foo PLUGIN_CONTROL_MEMSZ("copy", "COPYBLOCKS", "G0") : {
OUTSECT_PLUGIN:     *(*foo*)
OUTSECT_PLUGIN:   }
OUTSECT_PLUGIN:   .bar : {
OUTSECT_PLUGIN:     *(*bar*)
OUTSECT_PLUGIN:   }
OUTSECT_PLUGIN:   .baz : {
OUTSECT_PLUGIN:     *(*baz*)
OUTSECT_PLUGIN:   }
OUTSECT_PLUGIN: }
OUTSECT_PLUGIN: LINKER_PLUGIN("BasicLinkerScriptGenerator", "BasicLinkerScriptGenerator");
OUTSECT_PLUGIN-NOT: PLUGIN_CONTROL_MEMSZ